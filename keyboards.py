from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder
from aiogram.types import KeyboardButton, InlineKeyboardButton
import aiosqlite
from aiogram import types
from aiogram.filters.callback_data import CallbackData

class ApplicationActionCallback(CallbackData, prefix="app_action"):
    action: str
    app_id: int

def get_admin_keyboard():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(KeyboardButton(text='üìÑ –ü—Ä–æ—Å–º–æ—Ç—Ä –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫'))
    keyboard.add(KeyboardButton(text='üìë –ü—Ä–æ—Å–º–æ—Ç—Ä –∑–∞–∫—Ä—ã—Ç—ã—Ö –∑–∞—è–≤–æ–∫'))
    keyboard.add(KeyboardButton(text='üìë –ü–æ–ª—É—á–∏—Ç—å —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä–æ–∑—ã–≥—Ä—ã—à–∏'))
    return keyboard.as_markup(resize_keyboard=True)

def get_user_keyboard():
    keyboard = ReplyKeyboardBuilder()
    keyboard.add(KeyboardButton(text='üìù –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É'))
    return keyboard.as_markup(resize_keyboard=True)



# –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é callback data
class ApplicationActionCallback(CallbackData, prefix="app_action"):
    action: str
    app_id: int

async def inline_keyboard():
    keyboard = InlineKeyboardBuilder()
    
    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    async with aiosqlite.connect('bot_database.db') as db:
        async with db.execute('SELECT * FROM applications WHERE status = "pending"') as cursor:
            applications = await cursor.fetchall()
            for app in applications:
                # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç—Ä–æ–≥–æ —Ç–∏–ø–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–π callback data
                keyboard.button(
                    text="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", 
                    callback_data=ApplicationActionCallback(action="approve", app_id=app[0]).pack()
                )
                keyboard.button(
                    text="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", 
                    callback_data=ApplicationActionCallback(action="reject", app_id=app[0]).pack()
                )
                keyboard.button(
                    text="üö´ –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å", 
                    callback_data=ApplicationActionCallback(action="block", app_id=app[0]).pack()
                )
    return keyboard.as_markup()
